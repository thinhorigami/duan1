/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package view;

import Utilities.QrCode;
import Utilities.WebCam;
import com.google.zxing.NotFoundException;
import java.awt.image.BufferedImage;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author nguye
 */
public class WebCamView extends javax.swing.JDialog {

    private volatile String result;
    private WebCam thread;
    private QrCode qr_code;

    /**
     * Creates new form WebCamView
     */
    public WebCamView(java.awt.Frame parent, boolean modal) throws InterruptedException {
        super(parent, modal);
        initComponents();
        this.qr_code = new QrCode();
        this.result = new String("");
        this.thread = new WebCam() {
            @Override
            public void onRunning(BufferedImage _img) {
                webcam_capture.setIcon(new ImageIcon(_img));
                try {
                    result_label.setText(qr_code.ReadQR(_img));
                    if (!qr_code.ReadQR(_img).isEmpty()) {
                        JOptionPane.showMessageDialog(null, qr_code.ReadQR(_img));
                    }

                } catch (NotFoundException ex) {
                    Logger.getLogger(WebCamView.class.getName()).log(Level.SEVERE, null, ex);
                    return;
                }
            }
        };
    }

    private void opemWevCam() {
        this.thread.start();
    }

    private void closeWebCam() throws InterruptedException {

        try {
            this.thread.closeWebCam();
            this.thread.join(1000);
        } catch (InterruptedException ex) {
            Logger.getLogger(WebCamView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    @Override
    public void setVisible(boolean b) {

        if (b == true) {
            this.opemWevCam();
        } else try {
            this.closeWebCam();
        } catch (InterruptedException ex) {
            Logger.getLogger(WebCamView.class.getName()).log(Level.SEVERE, null, ex);
        }
        super.setVisible(b); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/OverriddenMethodBody
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        webcam_capture = new javax.swing.JLabel();
        result_label = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        result_label.setText("jLabel1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(webcam_capture, javax.swing.GroupLayout.DEFAULT_SIZE, 546, Short.MAX_VALUE)
                    .addComponent(result_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(webcam_capture, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(result_label, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        this.setVisible(false);
    }//GEN-LAST:event_formWindowClosing

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel result_label;
    private javax.swing.JLabel webcam_capture;
    // End of variables declaration//GEN-END:variables
}
